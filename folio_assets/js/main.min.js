function msieversion(){return window.navigator.userAgent.indexOf("MSIE ")>0||navigator.userAgent.match(/Trident.*rv\:11\./),!1}function gridLayouter(o){console.log(o);for(var e=1,a=0;a<o.length;a++)$("#instagrid"+e).append('<div class="col-md-12  no-padding insta-post-appender"><img src="'+o[a]+'"></div>'),console.log("hi"),4==++e&&(e=1)}window.sr=ScrollReveal(),sr.reveal("#intro",{duration:2e3}),sr.reveal("#project-1",{duration:2600}),sr.reveal("#project-2",{duration:2600}),sr.reveal("#project-3",{duration:2600}),sr.reveal("#heading-1",{duration:2600}),sr.reveal("#heading-2",{duration:2600}),sr.reveal("#heading-3",{duration:2600}),sr.reveal("#heading-4",{duration:2600}),$(window).scroll(function(){$(".navbar").offset().top>50?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")}),$(function(){$(document).on("click","a.page-scroll",function(o){var e=$(this);$("html, body").stop().animate({scrollTop:$(e.attr("href")).offset().top},1500,"easeInOutExpo"),o.preventDefault()})}),new Tippy(".tippy",{position:"right",animation:"fade",duration:300,arrow:!0,animateFill:!0,size:"big"}),$.get("./folio_assets/json/instapost.json",function(o){for(var e=[],a=o.items,r=0;r<9;r++)e.push(a[r].images.low_resolution.url);gridLayouter(e)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibXNpZXZlcnNpb24iLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpbmRleE9mIiwibWF0Y2giLCJncmlkTGF5b3V0ZXIiLCJwb3N0cyIsImNvbnNvbGUiLCJsb2ciLCJjb3VudGVyIiwiaSIsImxlbmd0aCIsIiQiLCJhcHBlbmQiLCJzciIsIlNjcm9sbFJldmVhbCIsInJldmVhbCIsImR1cmF0aW9uIiwic2Nyb2xsIiwib2Zmc2V0IiwidG9wIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImRvY3VtZW50Iiwib24iLCJldmVudCIsIiRhbmNob3IiLCJ0aGlzIiwic3RvcCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJhdHRyIiwicHJldmVudERlZmF1bHQiLCJUaXBweSIsInBvc2l0aW9uIiwiYW5pbWF0aW9uIiwiYXJyb3ciLCJhbmltYXRlRmlsbCIsInNpemUiLCJnZXQiLCJkYXRhIiwicG9zdENvbGxlY3RvciIsIml0ZW1zIiwicHVzaCIsImltYWdlcyIsImxvd19yZXNvbHV0aW9uIiwidXJsIl0sIm1hcHBpbmdzIjoiQUFZQSxRQUFBQSxlQVdBLE1BVEFDLFFBQUFDLFVBQUFDLFVBQ0FDLFFBQUEsU0FFQSxHQUFBRixVQUFBQyxVQUFBRSxNQUFBLHNCQU1BLEVBOERBLFFBQUFDLGNBQUFDLEdBQ0FDLFFBQUFDLElBQUFGLEVBRUEsS0FBQSxHQURBRyxHQUFBLEVBQ0FDLEVBQUEsRUFBQUEsRUFBQUosRUFBQUssT0FBQUQsSUFHQUUsRUFBQSxhQUFBSCxHQUFBSSxPQUFBLG9FQUFBUCxFQUFBSSxHQUFBLFlBQ0FILFFBQUFDLElBQUEsTUFFQSxLQURBQyxJQUVBQSxFQUFBLEdBNURBVCxPQUFBYyxHQUFBQyxlQUNBRCxHQUFBRSxPQUFBLFVBQUFDLFNBQUEsTUFDQUgsR0FBQUUsT0FBQSxjQUFBQyxTQUFBLE9BQ0FILEdBQUFFLE9BQUEsY0FBQUMsU0FBQSxPQUNBSCxHQUFBRSxPQUFBLGNBQUFDLFNBQUEsT0FDQUgsR0FBQUUsT0FBQSxjQUFBQyxTQUFBLE9BQ0FILEdBQUFFLE9BQUEsY0FBQUMsU0FBQSxPQUNBSCxHQUFBRSxPQUFBLGNBQUFDLFNBQUEsT0FDQUgsR0FBQUUsT0FBQSxjQUFBQyxTQUFBLE9BS0FMLEVBQUFaLFFBQUFrQixPQUFBLFdBQ0FOLEVBQUEsV0FBQU8sU0FBQUMsSUFBQSxHQUNBUixFQUFBLHFCQUFBUyxTQUFBLG9CQUVBVCxFQUFBLHFCQUFBVSxZQUFBLHNCQUtBVixFQUFBLFdBQ0FBLEVBQUFXLFVBQUFDLEdBQUEsUUFBQSxnQkFBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUFkLEVBQUFlLEtBQ0FmLEdBQUEsY0FBQWdCLE9BQUFDLFNBQ0FDLFVBQUFsQixFQUFBYyxFQUFBSyxLQUFBLFNBQUFaLFNBQUFDLEtBQ0EsS0FBQSxpQkFDQUssRUFBQU8scUJBT0EsR0FBQUMsT0FBQSxVQUNBQyxTQUFBLFFBQ0FDLFVBQUEsT0FDQWxCLFNBQUEsSUFDQW1CLE9BQUEsRUFDQUMsYUFBQSxFQUNBQyxLQUFBLFFBNkJBMUIsRUFBQTJCLElBQUEscUNBQUEsU0FBQUMsR0FLQSxJQUFBLEdBSEFDLE1BQ0FuQyxFQUFBa0MsRUFBQUUsTUFFQWhDLEVBQUEsRUFBQUEsRUFBQSxFQUFBQSxJQUNBK0IsRUFBQUUsS0FBQXJDLEVBQUFJLEdBQUFrQyxPQUFBQyxlQUFBQyxJQUlBekMsY0FBQW9DIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8qKiBAYXV0aG9yIFNoaWhhYiBQTSAoIFVJIERldmVsb3BlciApXHJcbiAqICBMb2FkaW5nIHRoZSBtYWluIGFwcCBtb2R1bGUgd2l0aCB0aGUgZGVwZW5kZW50IG1vZHVsZXMgXHJcbiAqL1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8vIFVzZXIgRXhwZXJpZW5jZSByZWxhdGVkIEphdmFTY3JpcHRcclxuLy8gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAgICAgICAgIC8vRGVjYWxhcmUgdmFyc1xyXG4gICAgIFxyXG5cclxuICAgICAgICAgICAgLy9jaGVja2luZyB3ZXRoZXIgdGhlIHVzZXIgaXMgdXNpbmcgSUUgXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIG1zaWV2ZXJzaW9uKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xyXG4gICAgICAgICAgICAgICAgdmFyIG1zaWUgPSB1YS5pbmRleE9mKFwiTVNJRSBcIik7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKG1zaWUgPiAwIHx8ICEhbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvVHJpZGVudC4qcnZcXDoxMVxcLi8pKSAgLy8gSWYgSW50ZXJuZXQgRXhwbG9yZXIsIHJldHVybiB2ZXJzaW9uIG51bWJlclxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgLy8gcG9wIHVwIGEgbW9kYWwgYm94IHNheWluZyBmb3IgYmV0dGVyIGV4cGVyaWVuY2UgSSByZWNvbW1lbmQgdG8gdXNlIGNocm9tZSBvciBmaXJlZm94IG9yIHNhZmFyaVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbi8vIG1zaWV2ZXJzaW9uKCk7IC8vIGZvciB0aGUgbW9tZW50IGNvbW1lbnRlZCB0aGlzIGNvZGUgbG90IHRvIHdvcmsgb24gdGhpcyBhdCBsYXN0XHJcblxyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAvLyBEZXNpZ24gUmVhbHRlZCBKYXZhc2NyaXB0XHJcbi8vICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuICAgICAgICAgICAgLy8gSmF2YVNjcmlwdFxyXG4gICAgICAgICAgICB3aW5kb3cuc3IgPSBTY3JvbGxSZXZlYWwoKTtcclxuICAgICAgICAgICAgc3IucmV2ZWFsKCcjaW50cm8nLHsgZHVyYXRpb246IDIwMDAgfSk7XHJcbiAgICAgICAgICAgIHNyLnJldmVhbCgnI3Byb2plY3QtMScseyBkdXJhdGlvbjogMjYwMCB9KTtcclxuICAgICAgICAgICAgc3IucmV2ZWFsKCcjcHJvamVjdC0yJyx7IGR1cmF0aW9uOiAyNjAwIH0pO1xyXG4gICAgICAgICAgICBzci5yZXZlYWwoJyNwcm9qZWN0LTMnLHsgZHVyYXRpb246IDI2MDAgfSk7XHJcbiAgICAgICAgICAgIHNyLnJldmVhbCgnI2hlYWRpbmctMScseyBkdXJhdGlvbjogMjYwMCB9KTtcclxuICAgICAgICAgICAgIHNyLnJldmVhbCgnI2hlYWRpbmctMicseyBkdXJhdGlvbjogMjYwMCB9KTtcclxuICAgICAgICAgICAgICBzci5yZXZlYWwoJyNoZWFkaW5nLTMnLHsgZHVyYXRpb246IDI2MDAgfSk7XHJcbiAgICAgICAgICAgICAgIHNyLnJldmVhbCgnI2hlYWRpbmctNCcseyBkdXJhdGlvbjogMjYwMCB9KTtcclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgLy9zci5yZXZlYWwoJyNteS13b3JrJyx7IGR1cmF0aW9uOiAzMDAwIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8galF1ZXJ5IHRvIGNvbGxhcHNlIHRoZSBuYXZiYXIgb24gc2Nyb2xsXHJcbiAgICAgICAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJChcIi5uYXZiYXJcIikub2Zmc2V0KCkudG9wID4gNTApIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLm5hdmJhci1maXhlZC10b3BcIikuYWRkQ2xhc3MoXCJ0b3AtbmF2LWNvbGxhcHNlXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLm5hdmJhci1maXhlZC10b3BcIikucmVtb3ZlQ2xhc3MoXCJ0b3AtbmF2LWNvbGxhcHNlXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8valF1ZXJ5IGZvciBwYWdlIHNjcm9sbGluZyBmZWF0dXJlIC0gcmVxdWlyZXMgalF1ZXJ5IEVhc2luZyBwbHVnaW5cclxuICAgICAgICAgICAgJChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdhLnBhZ2Utc2Nyb2xsJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgJGFuY2hvciA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLnN0b3AoKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiAkKCRhbmNob3IuYXR0cignaHJlZicpKS5vZmZzZXQoKS50b3BcclxuICAgICAgICAgICAgICAgICAgICB9LCAxNTAwLCAnZWFzZUluT3V0RXhwbycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgICAgICAvLyBUb29sdGlwIEdlbmVyYXRvciBjbGFzcyBcclxuICAgICAgICAgICAgbmV3IFRpcHB5KCcudGlwcHknLHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAncmlnaHQnLFxyXG4gICAgICAgICAgICAgICAgYW5pbWF0aW9uOiAnZmFkZScsXHJcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzAwLFxyXG4gICAgICAgICAgICAgICAgYXJyb3c6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBhbmltYXRlRmlsbDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIHNpemU6ICdiaWcnXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAvLyBBUEkgcmVhbHRlZCBKYXZhc2NyaXB0XHJcbi8vICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4gICAgLy8gb24gc3VjY2VzcyBvZiBpbnN0YXBvc3QgQVBJXHJcbiAgICBmdW5jdGlvbiBncmlkTGF5b3V0ZXIocG9zdHMpe1xyXG4gICAgICAgY29uc29sZS5sb2cocG9zdHMpO1xyXG4gICAgICAgIHZhciBjb3VudGVyID0gMTtcclxuICAgICAgICBmb3IodmFyIGk9MDtpPHBvc3RzLmxlbmd0aDtpKyspe1xyXG5cclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyggJCgnI2luc3RhZ3JpZCcrY291bnRlcikpO1xyXG4gICAgICAgICAgICQoJyNpbnN0YWdyaWQnK2NvdW50ZXIpLmFwcGVuZCgnPGRpdiBjbGFzcz1cImNvbC1tZC0xMiAgbm8tcGFkZGluZyBpbnN0YS1wb3N0LWFwcGVuZGVyXCI+PGltZyBzcmM9XCInK3Bvc3RzW2ldKydcIj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJoaVwiKTtcclxuICAgICAgICAgICAgY291bnRlcisrO1xyXG4gICAgICAgICAgICBpZihjb3VudGVyPT00KXtcclxuICAgICAgICAgICAgICAgIGNvdW50ZXIgPSAxO1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAgJC5nZXQoIFwiLi9mb2xpb19hc3NldHMvanNvbi9pbnN0YXBvc3QuanNvblwiLCBmdW5jdGlvbiggZGF0YSApIHtcclxuICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgdmFyIHBvc3RDb2xsZWN0b3IgPSBbXTtcclxuICAgICAgICAgICAgdmFyIHBvc3RzID0gZGF0YS5pdGVtcztcclxuICAgICAgICAgICAgdmFyIHBvc3RDb3VudGVyID0gMDtcclxuICAgICAgICAgICAgZm9yKHZhciBpPTA7aTw5O2krKyl7XHJcbiAgICAgICAgICAgICAgICBwb3N0Q29sbGVjdG9yLnB1c2gocG9zdHNbaV0uaW1hZ2VzLmxvd19yZXNvbHV0aW9uLnVybCk7XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXHJcbiAgICAgICAgICAgICBncmlkTGF5b3V0ZXIocG9zdENvbGxlY3Rvcik7XHJcblxyXG5cclxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
