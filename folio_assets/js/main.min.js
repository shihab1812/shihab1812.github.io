function msieversion(){return window.navigator.userAgent.indexOf("MSIE ")>0||navigator.userAgent.match(/Trident.*rv\:11\./),!1}function gridLayouter(e){console.log(e);for(var o=1,r=0;r<e.length;r++)$("#instagrid"+o).append('<div class="col-md-12  no-padding insta-post-appender"><img src="'+e[r]+'"></div>'),console.log("hi"),4==++o&&(o=1)}window.sr=ScrollReveal(),sr.reveal("#intro",{duration:2e3}),sr.reveal("#project-1",{duration:2600}),sr.reveal("#project-2",{duration:2600}),sr.reveal("#project-3",{duration:2600}),sr.reveal("#heading-1",{duration:2600}),sr.reveal("#heading-2",{duration:2600}),sr.reveal("#heading-3",{duration:2600}),sr.reveal("#heading-4",{duration:2600}),$(window).scroll(function(){$(".navbar").offset().top>50?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")}),$(function(){document.getElementsByClassName("explore-pro-link").href="http://www.google.com/",$(document).on("click","a.page-scroll",function(e){var o=$(this);$("html, body").stop().animate({scrollTop:$(o.attr("href")).offset().top},1500,"easeInOutExpo"),e.preventDefault()})}),new Tippy(".tippy",{position:"right",animation:"fade",duration:300,arrow:!0,animateFill:!0,size:"big"}),$.get("./folio_assets/json/instapost.json",function(e){for(var o=[],r=e.items,a=0;a<9;a++)o.push(r[a].images.low_resolution.url);gridLayouter(o)});
//# sourceMappingURL=data:application/json;base64,
