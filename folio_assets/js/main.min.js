function msieversion(){return window.navigator.userAgent.indexOf("MSIE ")>0||navigator.userAgent.match(/Trident.*rv\:11\./),!1}function gridLayouter(o){console.log(o);for(var n=1,t=0;t<o.length;t++)console.log("hi"),4==++n&&(n=1)}window.sr=ScrollReveal(),sr.reveal("#intro",{duration:2e3}),sr.reveal("#my-work",{duration:3e3}),$(window).scroll(function(){$(".navbar").offset().top>50?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")}),$(function(){$(document).on("click","a.page-scroll",function(o){var n=$(this);$("html, body").stop().animate({scrollTop:$(n.attr("href")).offset().top},1500,"easeInOutExpo"),o.preventDefault()})}),new Tippy(".tippy",{position:"right",animation:"fade",duration:300,arrow:!0,animateFill:!0,size:"big"}),$.get("./folio_assets/json/instapost.json",function(o){for(var n=[],t=o.items,e=0;e<9;e++)n.push(t[e].images.low_resolution.url);gridLayouter(n)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibXNpZXZlcnNpb24iLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpbmRleE9mIiwibWF0Y2giLCJncmlkTGF5b3V0ZXIiLCJwb3N0cyIsImNvbnNvbGUiLCJsb2ciLCJjb3VudGVyIiwiaSIsImxlbmd0aCIsInNyIiwiU2Nyb2xsUmV2ZWFsIiwicmV2ZWFsIiwiZHVyYXRpb24iLCIkIiwic2Nyb2xsIiwib2Zmc2V0IiwidG9wIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImRvY3VtZW50Iiwib24iLCJldmVudCIsIiRhbmNob3IiLCJ0aGlzIiwic3RvcCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJhdHRyIiwicHJldmVudERlZmF1bHQiLCJUaXBweSIsInBvc2l0aW9uIiwiYW5pbWF0aW9uIiwiYXJyb3ciLCJhbmltYXRlRmlsbCIsInNpemUiLCJnZXQiLCJkYXRhIiwicG9zdENvbGxlY3RvciIsIml0ZW1zIiwicHVzaCIsImltYWdlcyIsImxvd19yZXNvbHV0aW9uIiwidXJsIl0sIm1hcHBpbmdzIjoiQUFZQSxRQUFBQSxlQVdBLE1BVEFDLFFBQUFDLFVBQUFDLFVBQ0FDLFFBQUEsU0FFQSxHQUFBRixVQUFBQyxVQUFBRSxNQUFBLHNCQU1BLEVBcURBLFFBQUFDLGNBQUFDLEdBQ0FDLFFBQUFDLElBQUFGLEVBRUEsS0FBQSxHQURBRyxHQUFBLEVBQ0FDLEVBQUEsRUFBQUEsRUFBQUosRUFBQUssT0FBQUQsSUFJQUgsUUFBQUMsSUFBQSxNQUVBLEtBREFDLElBRUFBLEVBQUEsR0FuREFULE9BQUFZLEdBQUFDLGVBQ0FELEdBQUFFLE9BQUEsVUFBQUMsU0FBQSxNQUNBSCxHQUFBRSxPQUFBLFlBQUFDLFNBQUEsTUFHQUMsRUFBQWhCLFFBQUFpQixPQUFBLFdBQ0FELEVBQUEsV0FBQUUsU0FBQUMsSUFBQSxHQUNBSCxFQUFBLHFCQUFBSSxTQUFBLG9CQUVBSixFQUFBLHFCQUFBSyxZQUFBLHNCQUtBTCxFQUFBLFdBQ0FBLEVBQUFNLFVBQUFDLEdBQUEsUUFBQSxnQkFBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUFULEVBQUFVLEtBQ0FWLEdBQUEsY0FBQVcsT0FBQUMsU0FDQUMsVUFBQWIsRUFBQVMsRUFBQUssS0FBQSxTQUFBWixTQUFBQyxLQUNBLEtBQUEsaUJBQ0FLLEVBQUFPLHFCQU1BLEdBQUFDLE9BQUEsVUFDQUMsU0FBQSxRQUNBQyxVQUFBLE9BQ0FuQixTQUFBLElBQ0FvQixPQUFBLEVBQ0FDLGFBQUEsRUFDQUMsS0FBQSxRQTZCQXJCLEVBQUFzQixJQUFBLHFDQUFBLFNBQUFDLEdBS0EsSUFBQSxHQUhBQyxNQUNBbEMsRUFBQWlDLEVBQUFFLE1BRUEvQixFQUFBLEVBQUFBLEVBQUEsRUFBQUEsSUFDQThCLEVBQUFFLEtBQUFwQyxFQUFBSSxHQUFBaUMsT0FBQUMsZUFBQUMsSUFJQXhDLGNBQUFtQyIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vKiogQGF1dGhvciBTaGloYWIgUE0gKCBVSSBEZXZlbG9wZXIgKVxyXG4gKiAgTG9hZGluZyB0aGUgbWFpbiBhcHAgbW9kdWxlIHdpdGggdGhlIGRlcGVuZGVudCBtb2R1bGVzIFxyXG4gKi9cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgICAvLyBVc2VyIEV4cGVyaWVuY2UgcmVsYXRlZCBKYXZhU2NyaXB0XHJcbi8vICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgICAgICAgICAvL0RlY2FsYXJlIHZhcnNcclxuICAgICBcclxuXHJcbiAgICAgICAgICAgIC8vY2hlY2tpbmcgd2V0aGVyIHRoZSB1c2VyIGlzIHVzaW5nIElFIFxyXG4gICAgICAgICAgICBmdW5jdGlvbiBtc2lldmVyc2lvbigpIHtcclxuXHJcbiAgICAgICAgICAgICAgICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcclxuICAgICAgICAgICAgICAgIHZhciBtc2llID0gdWEuaW5kZXhPZihcIk1TSUUgXCIpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChtc2llID4gMCB8fCAhIW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1RyaWRlbnQuKnJ2XFw6MTFcXC4vKSkgIC8vIElmIEludGVybmV0IEV4cGxvcmVyLCByZXR1cm4gdmVyc2lvbiBudW1iZXJcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIC8vIHBvcCB1cCBhIG1vZGFsIGJveCBzYXlpbmcgZm9yIGJldHRlciBleHBlcmllbmNlIEkgcmVjb21tZW5kIHRvIHVzZSBjaHJvbWUgb3IgZmlyZWZveCBvciBzYWZhcmlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4vLyBtc2lldmVyc2lvbigpOyAvLyBmb3IgdGhlIG1vbWVudCBjb21tZW50ZWQgdGhpcyBjb2RlIGxvdCB0byB3b3JrIG9uIHRoaXMgYXQgbGFzdFxyXG5cclxuXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgLy8gRGVzaWduIFJlYWx0ZWQgSmF2YXNjcmlwdFxyXG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbiAgICAgICAgICAgIC8vIEphdmFTY3JpcHRcclxuICAgICAgICAgICAgd2luZG93LnNyID0gU2Nyb2xsUmV2ZWFsKCk7XHJcbiAgICAgICAgICAgIHNyLnJldmVhbCgnI2ludHJvJyx7IGR1cmF0aW9uOiAyMDAwIH0pO1xyXG4gICAgICAgICAgICBzci5yZXZlYWwoJyNteS13b3JrJyx7IGR1cmF0aW9uOiAzMDAwIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8galF1ZXJ5IHRvIGNvbGxhcHNlIHRoZSBuYXZiYXIgb24gc2Nyb2xsXHJcbiAgICAgICAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoJChcIi5uYXZiYXJcIikub2Zmc2V0KCkudG9wID4gNTApIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLm5hdmJhci1maXhlZC10b3BcIikuYWRkQ2xhc3MoXCJ0b3AtbmF2LWNvbGxhcHNlXCIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLm5hdmJhci1maXhlZC10b3BcIikucmVtb3ZlQ2xhc3MoXCJ0b3AtbmF2LWNvbGxhcHNlXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIC8valF1ZXJ5IGZvciBwYWdlIHNjcm9sbGluZyBmZWF0dXJlIC0gcmVxdWlyZXMgalF1ZXJ5IEVhc2luZyBwbHVnaW5cclxuICAgICAgICAgICAgJChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICdhLnBhZ2Utc2Nyb2xsJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgJGFuY2hvciA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnaHRtbCwgYm9keScpLnN0b3AoKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsVG9wOiAkKCRhbmNob3IuYXR0cignaHJlZicpKS5vZmZzZXQoKS50b3BcclxuICAgICAgICAgICAgICAgICAgICB9LCAxNTAwLCAnZWFzZUluT3V0RXhwbycpO1xyXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICAgICAgLy8gVG9vbHRpcCBHZW5lcmF0b3IgY2xhc3MgXHJcbiAgICAgICAgICAgIG5ldyBUaXBweSgnLnRpcHB5Jyx7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JyxcclxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogJ2ZhZGUnLFxyXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IDMwMCxcclxuICAgICAgICAgICAgICAgIGFycm93OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgYW5pbWF0ZUZpbGw6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBzaXplOiAnYmlnJ1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgLy8gQVBJIHJlYWx0ZWQgSmF2YXNjcmlwdFxyXG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuICAgIC8vIG9uIHN1Y2Nlc3Mgb2YgaW5zdGFwb3N0IEFQSVxyXG4gICAgZnVuY3Rpb24gZ3JpZExheW91dGVyKHBvc3RzKXtcclxuICAgICAgIGNvbnNvbGUubG9nKHBvc3RzKTtcclxuICAgICAgICB2YXIgY291bnRlciA9IDE7XHJcbiAgICAgICAgZm9yKHZhciBpPTA7aTxwb3N0cy5sZW5ndGg7aSsrKXtcclxuXHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coICQoJyNpbnN0YWdyaWQnK2NvdW50ZXIpKTtcclxuICAgICAgICAgICAvLyQoJyNpbnN0YWdyaWQnK2NvdW50ZXIpLmFwcGVuZCgnPGRpdiBjbGFzcz1cImNvbC1tZC0xMiBpbnN0YS1wb3N0LWFwcGVuZGVyXCI+PGltZyBzcmM9XCInK3Bvc3RzW2ldKydcIj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJoaVwiKTtcclxuICAgICAgICAgICAgY291bnRlcisrO1xyXG4gICAgICAgICAgICBpZihjb3VudGVyPT00KXtcclxuICAgICAgICAgICAgICAgIGNvdW50ZXIgPSAxO1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAgJC5nZXQoIFwiLi9mb2xpb19hc3NldHMvanNvbi9pbnN0YXBvc3QuanNvblwiLCBmdW5jdGlvbiggZGF0YSApIHtcclxuICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgdmFyIHBvc3RDb2xsZWN0b3IgPSBbXTtcclxuICAgICAgICAgICAgdmFyIHBvc3RzID0gZGF0YS5pdGVtcztcclxuICAgICAgICAgICAgdmFyIHBvc3RDb3VudGVyID0gMDtcclxuICAgICAgICAgICAgZm9yKHZhciBpPTA7aTw5O2krKyl7XHJcbiAgICAgICAgICAgICAgICBwb3N0Q29sbGVjdG9yLnB1c2gocG9zdHNbaV0uaW1hZ2VzLmxvd19yZXNvbHV0aW9uLnVybCk7XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXHJcbiAgICAgICAgICAgICBncmlkTGF5b3V0ZXIocG9zdENvbGxlY3Rvcik7XHJcblxyXG5cclxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
