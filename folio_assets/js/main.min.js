function msieversion(){return window.navigator.userAgent.indexOf("MSIE ")>0||navigator.userAgent.match(/Trident.*rv\:11\./),!1}function gridLayouter(e){console.log(e);for(var a=1,o=0;o<e.length;o++)$("#instagrid"+a).append('<div class="col-md-12  no-padding insta-post-appender"><img src="'+e[o]+'"></div>'),console.log("hi"),4==++a&&(a=1)}$(window).scroll(function(){$(".navbar").offset().top>50?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")}),$(function(){$('[data-toggle="popover"]').popover(),new Tippy(".tippy",{position:"right",animation:"fade",duration:300,arrow:!0,animateFill:!0,size:"big"}),$("#loader-sec").show().delay(3800).fadeOut(function(){$(".animated-fInDown").removeClass("vs-none").addClass("animated fadeInDown"),$(".animated-fInUp").removeClass("vs-none").addClass("animated fadeInUp"),$(".animated-fIn").removeClass("vs-none").addClass("animated fadeIn")}),$(".external").click(function(e){e.preventDefault();var a=$(this).data("link");window.open(a,"_blank")}),$(document).on("click","a.page-scroll",function(e){var a=$(this);$("html, body").stop().animate({scrollTop:$(a.attr("href")).offset().top},1500,"easeInOutExpo"),e.preventDefault()}),$(".element").typed({strings:["First sentence.","Second sentence."],typeSpeed:0,loop:!0}),$(".owl-carousel").owlCarousel({responsive:{0:{items:1,nav:!0,loop:!0,margin:10,responsiveClass:!0,autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!1},600:{items:3,nav:!1,loop:!0,margin:10,responsiveClass:!0,autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!1},1e3:{items:5,nav:!0,dots:!0,center:!0,loop:!0,margin:10,responsiveClass:!0,autoplay:!0,autoplayTimeout:3e3,autoplayHoverPause:!1}}}),$("section#skillset .owl-nav .owl-prev").html("<i class='fa fa-angle-left fa-3x custom-prev-owl-btn'></i>"),$("section#skillset .owl-nav .owl-next").html("<i class='fa fa-angle-right fa-3x custom-next-owl-btn'></i>")}),$.get("./folio_assets/json/instapost.json",function(e){for(var a=[],o=e.items,n=0;n<9;n++)a.push(o[n].images.low_resolution.url);gridLayouter(a)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsibXNpZXZlcnNpb24iLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpbmRleE9mIiwibWF0Y2giLCJncmlkTGF5b3V0ZXIiLCJwb3N0cyIsImNvbnNvbGUiLCJsb2ciLCJjb3VudGVyIiwiaSIsImxlbmd0aCIsIiQiLCJhcHBlbmQiLCJzY3JvbGwiLCJvZmZzZXQiLCJ0b3AiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwicG9wb3ZlciIsIlRpcHB5IiwicG9zaXRpb24iLCJhbmltYXRpb24iLCJkdXJhdGlvbiIsImFycm93IiwiYW5pbWF0ZUZpbGwiLCJzaXplIiwic2hvdyIsImRlbGF5IiwiZmFkZU91dCIsImNsaWNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwidGVtcExpbmsiLCJ0aGlzIiwiZGF0YSIsIm9wZW4iLCJkb2N1bWVudCIsIm9uIiwiZXZlbnQiLCIkYW5jaG9yIiwic3RvcCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJhdHRyIiwidHlwZWQiLCJzdHJpbmdzIiwidHlwZVNwZWVkIiwibG9vcCIsIm93bENhcm91c2VsIiwicmVzcG9uc2l2ZSIsIjAiLCJpdGVtcyIsIm5hdiIsIm1hcmdpbiIsInJlc3BvbnNpdmVDbGFzcyIsImF1dG9wbGF5IiwiYXV0b3BsYXlUaW1lb3V0IiwiYXV0b3BsYXlIb3ZlclBhdXNlIiwiNjAwIiwiMTAwMCIsImRvdHMiLCJjZW50ZXIiLCJodG1sIiwiZ2V0IiwicG9zdENvbGxlY3RvciIsInB1c2giLCJpbWFnZXMiLCJsb3dfcmVzb2x1dGlvbiIsInVybCJdLCJtYXBwaW5ncyI6IkFBV0EsUUFBQUEsZUFXQSxNQVRBQyxRQUFBQyxVQUFBQyxVQUNBQyxRQUFBLFNBRUEsR0FBQUYsVUFBQUMsVUFBQUUsTUFBQSxzQkFNQSxFQTZKQSxRQUFBQyxjQUFBQyxHQUNBQyxRQUFBQyxJQUFBRixFQUVBLEtBQUEsR0FEQUcsR0FBQSxFQUNBQyxFQUFBLEVBQUFBLEVBQUFKLEVBQUFLLE9BQUFELElBR0FFLEVBQUEsYUFBQUgsR0FBQUksT0FBQSxvRUFBQVAsRUFBQUksR0FBQSxZQUNBSCxRQUFBQyxJQUFBLE1BRUEsS0FEQUMsSUFFQUEsRUFBQSxHQXZKQUcsRUFBQVosUUFBQWMsT0FBQSxXQUNBRixFQUFBLFdBQUFHLFNBQUFDLElBQUEsR0FDQUosRUFBQSxxQkFBQUssU0FBQSxvQkFFQUwsRUFBQSxxQkFBQU0sWUFBQSxzQkFLQU4sRUFBQSxXQUVBQSxFQUFBLDJCQUFBTyxVQUdBLEdBQUFDLE9BQUEsVUFDQUMsU0FBQSxRQUNBQyxVQUFBLE9BQ0FDLFNBQUEsSUFDQUMsT0FBQSxFQUNBQyxhQUFBLEVBQ0FDLEtBQUEsUUFHQWQsRUFBQSxlQUFBZSxPQUFBQyxNQUFBLE1BQUFDLFFBQUEsV0FHQWpCLEVBQUEscUJBQUFNLFlBQUEsV0FBQUQsU0FBQSx1QkFDQUwsRUFBQSxtQkFBQU0sWUFBQSxXQUFBRCxTQUFBLHFCQUNBTCxFQUFBLGlCQUFBTSxZQUFBLFdBQUFELFNBQUEscUJBT0FMLEVBQUEsYUFBQWtCLE1BQUEsU0FBQUMsR0FDQUEsRUFBQUMsZ0JBQ0EsSUFBQUMsR0FBQXJCLEVBQUFzQixNQUFBQyxLQUFBLE9BRUFuQyxRQUFBb0MsS0FBQUgsRUFBQSxZQUlBckIsRUFBQXlCLFVBQUFDLEdBQUEsUUFBQSxnQkFBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUE1QixFQUFBc0IsS0FDQXRCLEdBQUEsY0FBQTZCLE9BQUFDLFNBQ0FDLFVBQUEvQixFQUFBNEIsRUFBQUksS0FBQSxTQUFBN0IsU0FBQUMsS0FDQSxLQUFBLGlCQUNBdUIsRUFBQVAsbUJBSUFwQixFQUFBLFlBQUFpQyxPQUNBQyxTQUFBLGtCQUFBLG9CQUNBQyxVQUFBLEVBQ0FDLE1BQUEsSUFpQ0FwQyxFQUFBLGlCQUFBcUMsYUFFQUMsWUFDQUMsR0FDQUMsTUFBQSxFQUNBQyxLQUFBLEVBQ0FMLE1BQUEsRUFDQU0sT0FBQSxHQUNBQyxpQkFBQSxFQUNBQyxVQUFBLEVBQ0FDLGdCQUFBLElBRUFDLG9CQUFBLEdBRUFDLEtBQ0FQLE1BQUEsRUFDQUMsS0FBQSxFQUNBTCxNQUFBLEVBQ0FNLE9BQUEsR0FDQUMsaUJBQUEsRUFDQUMsVUFBQSxFQUNBQyxnQkFBQSxJQUVBQyxvQkFBQSxHQUVBRSxLQUNBUixNQUFBLEVBQ0FDLEtBQUEsRUFDQVEsTUFBQSxFQUNBQyxRQUFBLEVBQ0FkLE1BQUEsRUFDQU0sT0FBQSxHQUNBQyxpQkFBQSxFQUNBQyxVQUFBLEVBQ0FDLGdCQUFBLElBRUFDLG9CQUFBLE1BSUE5QyxFQUFBLHVDQUFBbUQsS0FBQSw4REFDQW5ELEVBQUEsdUNBQUFtRCxLQUFBLGlFQWdDQW5ELEVBQUFvRCxJQUFBLHFDQUFBLFNBQUE3QixHQUtBLElBQUEsR0FIQThCLE1BQ0EzRCxFQUFBNkIsRUFBQWlCLE1BRUExQyxFQUFBLEVBQUFBLEVBQUEsRUFBQUEsSUFDQXVELEVBQUFDLEtBQUE1RCxFQUFBSSxHQUFBeUQsT0FBQUMsZUFBQUMsSUFJQWhFLGNBQUE0RCIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAYXV0aG9yIFNoaWhhYiBQTSAoIFVJIERldmVsb3BlciApXHJcbiAqICBMb2FkaW5nIHRoZSBtYWluIGFwcCBtb2R1bGUgd2l0aCB0aGUgZGVwZW5kZW50IG1vZHVsZXMgXHJcbiAqL1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVXNlciBFeHBlcmllbmNlIHJlbGF0ZWQgSmF2YVNjcmlwdFxyXG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy9EZWNhbGFyZSB2YXJzXHJcblxyXG5cclxuLy9jaGVja2luZyB3ZXRoZXIgdGhlIHVzZXIgaXMgdXNpbmcgSUUgXHJcbmZ1bmN0aW9uIG1zaWV2ZXJzaW9uKCkge1xyXG5cclxuICAgIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xyXG4gICAgdmFyIG1zaWUgPSB1YS5pbmRleE9mKFwiTVNJRSBcIik7XHJcblxyXG4gICAgaWYgKG1zaWUgPiAwIHx8ICEhbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvVHJpZGVudC4qcnZcXDoxMVxcLi8pKSAvLyBJZiBJbnRlcm5ldCBFeHBsb3JlciwgcmV0dXJuIHZlcnNpb24gbnVtYmVyXHJcbiAgICB7XHJcbiAgICAgICAgLy8gcG9wIHVwIGEgbW9kYWwgYm94IHNheWluZyBmb3IgYmV0dGVyIGV4cGVyaWVuY2UgSSByZWNvbW1lbmQgdG8gdXNlIGNocm9tZSBvciBmaXJlZm94IG9yIHNhZmFyaVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbi8vIG1zaWV2ZXJzaW9uKCk7IC8vIGZvciB0aGUgbW9tZW50IGNvbW1lbnRlZCB0aGlzIGNvZGUgbG90IHRvIHdvcmsgb24gdGhpcyBhdCBsYXN0XHJcblxyXG5cclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIERlc2lnbiBSZWFsdGVkIEphdmFzY3JpcHRcclxuLy8gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5cclxuXHJcbi8vc3IucmV2ZWFsKCcjbXktd29yaycseyBkdXJhdGlvbjogMzAwMCB9KTtcclxuXHJcbi8vIGpRdWVyeSB0byBjb2xsYXBzZSB0aGUgbmF2YmFyIG9uIHNjcm9sbFxyXG4kKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHtcclxuICAgIGlmICgkKFwiLm5hdmJhclwiKS5vZmZzZXQoKS50b3AgPiA1MCkge1xyXG4gICAgICAgICQoXCIubmF2YmFyLWZpeGVkLXRvcFwiKS5hZGRDbGFzcyhcInRvcC1uYXYtY29sbGFwc2VcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgICQoXCIubmF2YmFyLWZpeGVkLXRvcFwiKS5yZW1vdmVDbGFzcyhcInRvcC1uYXYtY29sbGFwc2VcIik7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuLy9qUXVlcnkgZm9yIHBhZ2Ugc2Nyb2xsaW5nIGZlYXR1cmUgLSByZXF1aXJlcyBqUXVlcnkgRWFzaW5nIHBsdWdpblxyXG4kKGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIEludGlhbGl6aW5nIFBvcE92ZXJcclxuICAgICAgICQoJ1tkYXRhLXRvZ2dsZT1cInBvcG92ZXJcIl0nKS5wb3BvdmVyKCk7XHJcblxyXG4gICAgLy8gVG9vbHRpcCBHZW5lcmF0b3IgY2xhc3MgXHJcbiAgICBuZXcgVGlwcHkoJy50aXBweScsIHtcclxuICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JyxcclxuICAgICAgICBhbmltYXRpb246ICdmYWRlJyxcclxuICAgICAgICBkdXJhdGlvbjogMzAwLFxyXG4gICAgICAgIGFycm93OiB0cnVlLFxyXG4gICAgICAgIGFuaW1hdGVGaWxsOiB0cnVlLFxyXG4gICAgICAgIHNpemU6ICdiaWcnXHJcbiAgICB9KTtcclxuICAgIC8vc2hvdyB0aGUgbG9hZGVyIGZvciBpbnRpYWwgU2Vjb25kJ3NcclxuICAgICQoXCIjbG9hZGVyLXNlY1wiKS5zaG93KCkuZGVsYXkoMzgwMCkuZmFkZU91dChmdW5jdGlvbigpIHtcclxuICAgIC8vIEFuaW1hdGlvbiBjb21wbGV0ZS5cclxuICBcclxuICAgICQoJy5hbmltYXRlZC1mSW5Eb3duJykucmVtb3ZlQ2xhc3MoJ3ZzLW5vbmUnKS5hZGRDbGFzcygnYW5pbWF0ZWQgZmFkZUluRG93bicpO1xyXG4gICAgJCgnLmFuaW1hdGVkLWZJblVwJykucmVtb3ZlQ2xhc3MoJ3ZzLW5vbmUnKS5hZGRDbGFzcygnYW5pbWF0ZWQgZmFkZUluVXAnKTtcclxuICAgICAgICQoJy5hbmltYXRlZC1mSW4nKS5yZW1vdmVDbGFzcygndnMtbm9uZScpLmFkZENsYXNzKCdhbmltYXRlZCBmYWRlSW4nKTtcclxuICB9KTtcclxuXHJcbiAgICAvL2ludHJvIGFuaW1hdGlvblxyXG4gXHJcbiAgICAvL3NldCBhbnkgZWxlbWVudCB0byBhY3QgbGlrZSBhbmNob3IgdGFnXHJcblxyXG4gICAgJChcIi5leHRlcm5hbFwiKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB2YXIgdGVtcExpbmsgPSAkKHRoaXMpLmRhdGEoJ2xpbmsnKTtcclxuXHJcbiAgICAgICAgd2luZG93Lm9wZW4odGVtcExpbmssICdfYmxhbmsnKTtcclxuICAgIH0pO1xyXG5cclxuXHJcbiAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnYS5wYWdlLXNjcm9sbCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciAkYW5jaG9yID0gJCh0aGlzKTtcclxuICAgICAgICAkKCdodG1sLCBib2R5Jykuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgICAgICBzY3JvbGxUb3A6ICQoJGFuY2hvci5hdHRyKCdocmVmJykpLm9mZnNldCgpLnRvcFxyXG4gICAgICAgIH0sIDE1MDAsICdlYXNlSW5PdXRFeHBvJyk7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vQXV0b1R5cGUgSnMgZnVuY3Rpb25cclxuICAgICQoXCIuZWxlbWVudFwiKS50eXBlZCh7XHJcbiAgICAgICAgc3RyaW5nczogW1wiRmlyc3Qgc2VudGVuY2UuXCIsIFwiU2Vjb25kIHNlbnRlbmNlLlwiXSxcclxuICAgICAgICB0eXBlU3BlZWQ6IDAsXHJcbiAgICAgICAgbG9vcDogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgIC8vIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIEphdmFTY3JpcHRcclxuICAgICAgICAvL3dpbmRvdy5zciA9IFNjcm9sbFJldmVhbCgpO1xyXG4gICAgICAgIC8vc3IucmV2ZWFsKCcjaW50cm8nLCB7XHJcbiAgICAgICAgICAvLyAgZHVyYXRpb246IDIwMDBcclxuICAgICAgICAvL30pO1xyXG4gICAgICAgLypzci5yZXZlYWwoJyNwcm9qZWN0LTEnLCB7XHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAyNjAwXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc3IucmV2ZWFsKCcjcHJvamVjdC0yJywge1xyXG4gICAgICAgICAgICBkdXJhdGlvbjogMjYwMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNyLnJldmVhbCgnI3Byb2plY3QtMycsIHtcclxuICAgICAgICAgICAgZHVyYXRpb246IDI2MDBcclxuICAgICAgICB9KTtcclxuICAgICAgICBzci5yZXZlYWwoJyNoZWFkaW5nLTEnLCB7XHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAyNjAwXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc3IucmV2ZWFsKCcjaGVhZGluZy0yJywge1xyXG4gICAgICAgICAgICBkdXJhdGlvbjogMjYwMFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNyLnJldmVhbCgnI2hlYWRpbmctMycsIHtcclxuICAgICAgICAgICAgZHVyYXRpb246IDI2MDBcclxuICAgICAgICB9KTtcclxuICAgICAgICBzci5yZXZlYWwoJyNoZWFkaW5nLTQnLCB7XHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAyNjAwXHJcbiAgICAgICAgfSk7Ki9cclxuXHJcbiAgLy8gIH0sIDM3NTApO1xyXG5cclxuICAgIC8vSW50aWF0ZSB0aGUgY2Fyb3VzZWxcclxuICAgICQoXCIub3dsLWNhcm91c2VsXCIpLm93bENhcm91c2VsKHtcclxuXHJcbiAgICAgICAgcmVzcG9uc2l2ZToge1xyXG4gICAgICAgICAgICAwOiB7XHJcbiAgICAgICAgICAgICAgICBpdGVtczogMSxcclxuICAgICAgICAgICAgICAgIG5hdjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDEwLFxyXG4gICAgICAgICAgICAgICAgcmVzcG9uc2l2ZUNsYXNzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBhdXRvcGxheVRpbWVvdXQ6IDMwMDAsXHJcblxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXlIb3ZlclBhdXNlOiBmYWxzZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICA2MDA6IHtcclxuICAgICAgICAgICAgICAgIGl0ZW1zOiAzLFxyXG4gICAgICAgICAgICAgICAgbmF2OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGxvb3A6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDEwLFxyXG4gICAgICAgICAgICAgICAgcmVzcG9uc2l2ZUNsYXNzOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBhdXRvcGxheVRpbWVvdXQ6IDMwMDAsXHJcblxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXlIb3ZlclBhdXNlOiBmYWxzZVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAxMDAwOiB7XHJcbiAgICAgICAgICAgICAgICBpdGVtczogNSxcclxuICAgICAgICAgICAgICAgIG5hdjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBjZW50ZXI6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAxMCxcclxuICAgICAgICAgICAgICAgIHJlc3BvbnNpdmVDbGFzczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgYXV0b3BsYXlUaW1lb3V0OiAzMDAwLFxyXG5cclxuICAgICAgICAgICAgICAgIGF1dG9wbGF5SG92ZXJQYXVzZTogZmFsc2UsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgICQoJ3NlY3Rpb24jc2tpbGxzZXQgLm93bC1uYXYgLm93bC1wcmV2JykuaHRtbChcIjxpIGNsYXNzPSdmYSBmYS1hbmdsZS1sZWZ0IGZhLTN4IGN1c3RvbS1wcmV2LW93bC1idG4nPjwvaT5cIik7XHJcbiAgICAkKCdzZWN0aW9uI3NraWxsc2V0IC5vd2wtbmF2IC5vd2wtbmV4dCcpLmh0bWwoXCI8aSBjbGFzcz0nZmEgZmEtYW5nbGUtcmlnaHQgZmEtM3ggY3VzdG9tLW5leHQtb3dsLWJ0bic+PC9pPlwiKTtcclxuXHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gQVBJIHJlYWx0ZWQgSmF2YXNjcmlwdFxyXG4vLyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLy8gb24gc3VjY2VzcyBvZiBpbnN0YXBvc3QgQVBJXHJcbmZ1bmN0aW9uIGdyaWRMYXlvdXRlcihwb3N0cykge1xyXG4gICAgY29uc29sZS5sb2cocG9zdHMpO1xyXG4gICAgdmFyIGNvdW50ZXIgPSAxO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwb3N0cy5sZW5ndGg7IGkrKykge1xyXG5cclxuICAgICAgICAvL2NvbnNvbGUubG9nKCAkKCcjaW5zdGFncmlkJytjb3VudGVyKSk7XHJcbiAgICAgICAgJCgnI2luc3RhZ3JpZCcgKyBjb3VudGVyKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJjb2wtbWQtMTIgIG5vLXBhZGRpbmcgaW5zdGEtcG9zdC1hcHBlbmRlclwiPjxpbWcgc3JjPVwiJyArIHBvc3RzW2ldICsgJ1wiPjwvZGl2PicpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiaGlcIik7XHJcbiAgICAgICAgY291bnRlcisrO1xyXG4gICAgICAgIGlmIChjb3VudGVyID09IDQpIHtcclxuICAgICAgICAgICAgY291bnRlciA9IDE7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbiQuZ2V0KFwiLi9mb2xpb19hc3NldHMvanNvbi9pbnN0YXBvc3QuanNvblwiLCBmdW5jdGlvbiAoZGF0YSkge1xyXG5cclxuICAgIHZhciBwb3N0Q29sbGVjdG9yID0gW107XHJcbiAgICB2YXIgcG9zdHMgPSBkYXRhLml0ZW1zO1xyXG4gICAgdmFyIHBvc3RDb3VudGVyID0gMDtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgOTsgaSsrKSB7XHJcbiAgICAgICAgcG9zdENvbGxlY3Rvci5wdXNoKHBvc3RzW2ldLmltYWdlcy5sb3dfcmVzb2x1dGlvbi51cmwpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIGNhbGxiYWNrIGZ1bmN0aW9uXHJcbiAgICBncmlkTGF5b3V0ZXIocG9zdENvbGxlY3Rvcik7XHJcblxyXG5cclxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
